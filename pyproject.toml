[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "python-gitlab"
dynamic = ["version", "readme"]
description = "Interact with GitLab API"
authors = [
    { name="Gauvain Pocentek", email="gauvain@pocentek.net" },
    { name="Max Wittig", email="max.wittig@siemens.com" },
    { name="Nejc Habjan", email="nejc.habjan@siemens.com" },
    { name="Roger Meier", email="r.meier@siemens.com" },
    { name="John L. Villalovos", email="john@sodarock.com" },
]
license = {text = "LGPL-3.0-or-later"}
dependencies = ["requests>=2.25.0", "requests-toolbelt>=0.10.1"]
requires-python = ">=3.7.0"

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.optional-dependencies]
autocompletion = ["argcomplete>=1.10.0,<3"]
yaml = ["PyYaml>=5.2"]

[tool.setuptools]
license-files = ["COPYING", "AUTHORS"]

[tool.setuptools.package-data]
gitlab = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "gitlab.._version.__version__"}
readme = {file = ["README.rst"]}

[tool.setuptools.packages.find]
exclude = ["docs*", "tests*"]

[project.scripts]
gitlab = "gitlab.cli:main"

[project.urls]
"Homepage" = "https://github.com/python-gitlab/python-gitlab"
"Bug Tracker" = "https://github.com/python-gitlab/python-gitlab/issues"

[tool.isort]
profile = "black"
multi_line_output = 3
order_by_type = false

[tool.mypy]
files = "."
exclude = "build/.*"
strict = true

# Overrides for currently untyped modules
[[tool.mypy.overrides]]
module = [
    "docs.*",
    "docs.ext.*",
    "tests.unit.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "tests.functional.*",
    "tests.functional.api.*",
    "tests.meta.*",
    "tests.smoke.*",
]
disable_error_code = ["no-untyped-def"]

[tool.semantic_release]
branch = "main"
version_variable = "gitlab/_version.py:__version__"
commit_subject = "chore: release v{version}"
commit_message = ""

[tool.pylint.messages_control]
max-line-length = 88
jobs = 0  # Use auto-detected number of multiple processes to speed up Pylint.
# TODO(jlvilla): Work on removing these disables over time.
disable = [
    "arguments-differ",
    "arguments-renamed",
    "broad-except",
    "cyclic-import",
    "duplicate-code",
    "import-outside-toplevel",
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "not-callable",
    "protected-access",
    "redefined-builtin",
    "signature-differs",
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-statements",
    "unsubscriptable-object",
]

[tool.pytest.ini_options]
xfail_strict = true
markers = [
    "gitlab_premium: marks tests that require GitLab Premium",
    "gitlab_ultimate: marks tests that require GitLab Ultimate",
]

# If 'log_cli=True' the following apply
# NOTE: If set 'log_cli_level' to 'DEBUG' will show a log of all of the HTTP requests
# made in functional tests.
log_cli_level = "INFO"
log_cli_format = "%(asctime)s.%(msecs)03d [%(levelname)8s] (%(filename)s:%(funcName)s:L%(lineno)s) %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
